name: OpenRisk CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push sync-engine image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-sync-engine:latest ./sync-engine
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-sync-engine:latest
      - name: Build and push dashboard-backend image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-backend:latest ./dashboard/backend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-backend:latest
      - name: Build and push dashboard-frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-frontend:latest ./dashboard/frontend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-frontend:latest

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          pip install -r sync-engine/requirements.txt
          pip install pytest  # Si tests avec pytest
      - name: Run unit tests
        run: |
          pytest sync-engine/tests.py  # Ajoutez des tests réels dans sync-engine/tests.py
          # Ajoutez des tests pour dashboard/backend si nécessaire

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Helm
        uses: azure/setup-helm@v4
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install openrisk ./helm --namespace openrisk --create-namespace \
            --set images.syncEngine=${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-sync-engine:latest \
            --set images.dashboardBackend=${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-backend:latest \
            --set images.dashboardFrontend=${{ secrets.DOCKER_HUB_USERNAME }}/openrisk-dashboard-frontend:latest